"""empty message

Revision ID: 931ff4f63542
Revises: 
Create Date: 2022-11-17 19:19:59.650820

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '931ff4f63542'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('about_me', sa.String(length=140), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('member',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('member_name', sa.String(length=64), nullable=True),
    sa.Column('member_element', sa.String(length=64), nullable=True),
    sa.Column('member_type', sa.String(length=64), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_member_member_name'), 'member', ['member_name'], unique=True)
    op.create_index(op.f('ix_member_timestamp'), 'member', ['timestamp'], unique=False)
    op.create_table('addition',
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('addend1', sa.Integer(), nullable=True),
    sa.Column('addend2', sa.Integer(), nullable=True),
    sa.Column('sum', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], ),
    sa.PrimaryKeyConstraint('member_id')
    )
    op.create_table('singly',
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('b', sa.Float(), nullable=True),
    sa.Column('h', sa.Float(), nullable=True),
    sa.Column('cc', sa.Float(), nullable=True),
    sa.Column('dbm', sa.Float(), nullable=True),
    sa.Column('dbv', sa.Float(), nullable=True),
    sa.Column('fc', sa.Float(), nullable=True),
    sa.Column('fy', sa.Float(), nullable=True),
    sa.Column('fyv', sa.Float(), nullable=True),
    sa.Column('k', sa.Float(), nullable=True),
    sa.Column('Lc', sa.Float(), nullable=True),
    sa.Column('λ', sa.Float(), nullable=True),
    sa.Column('Mus', sa.Float(), nullable=True),
    sa.Column('Mum', sa.Float(), nullable=True),
    sa.Column('Vu', sa.Float(), nullable=True),
    sa.Column('Pu', sa.Float(), nullable=True),
    sa.Column('Vdl', sa.Float(), nullable=True),
    sa.Column('Vll', sa.Float(), nullable=True),
    sa.Column('d', sa.Float(), nullable=True),
    sa.Column('b_check', sa.String(length=50), nullable=True),
    sa.Column('span_check', sa.String(length=50), nullable=True),
    sa.Column('B1', sa.Float(), nullable=True),
    sa.Column('pbal', sa.Float(), nullable=True),
    sa.Column('pmin', sa.Float(), nullable=True),
    sa.Column('pmax', sa.Float(), nullable=True),
    sa.Column('Φ', sa.Float(), nullable=True),
    sa.Column('Rns', sa.Float(), nullable=True),
    sa.Column('preqs', sa.Float(), nullable=True),
    sa.Column('duct_checks', sa.String(length=50), nullable=True),
    sa.Column('Asreqs', sa.Float(), nullable=True),
    sa.Column('ass', sa.Float(), nullable=True),
    sa.Column('cs', sa.Float(), nullable=True),
    sa.Column('fss', sa.Float(), nullable=True),
    sa.Column('yield_checks', sa.String(length=50), nullable=True),
    sa.Column('singly_checks', sa.String(length=50), nullable=True),
    sa.Column('Ns', sa.Float(), nullable=True),
    sa.Column('Nst', sa.Integer(), nullable=True),
    sa.Column('Nsb', sa.Integer(), nullable=True),
    sa.Column('Rnm', sa.Float(), nullable=True),
    sa.Column('preqm', sa.Float(), nullable=True),
    sa.Column('duct_checkm', sa.String(length=50), nullable=True),
    sa.Column('Asreqm', sa.Float(), nullable=True),
    sa.Column('am', sa.Float(), nullable=True),
    sa.Column('cm', sa.Float(), nullable=True),
    sa.Column('fsm', sa.Float(), nullable=True),
    sa.Column('yield_checkm', sa.String(length=50), nullable=True),
    sa.Column('singly_checkm', sa.String(length=50), nullable=True),
    sa.Column('Nm', sa.Float(), nullable=True),
    sa.Column('Nmt', sa.Integer(), nullable=True),
    sa.Column('Nmb', sa.Integer(), nullable=True),
    sa.Column('Pumax', sa.Float(), nullable=True),
    sa.Column('axial_check', sa.String(length=50), nullable=True),
    sa.Column('pact1', sa.Float(), nullable=True),
    sa.Column('pact2', sa.Float(), nullable=True),
    sa.Column('Vt', sa.Float(), nullable=True),
    sa.Column('Mpr1', sa.Float(), nullable=True),
    sa.Column('Mpr2', sa.Float(), nullable=True),
    sa.Column('Ve', sa.Float(), nullable=True),
    sa.Column('Vumax', sa.Float(), nullable=True),
    sa.Column('Mumax', sa.Float(), nullable=True),
    sa.Column('Vc1', sa.Float(), nullable=True),
    sa.Column('Vc2', sa.Float(), nullable=True),
    sa.Column('Vc3', sa.Float(), nullable=True),
    sa.Column('Vc', sa.Float(), nullable=True),
    sa.Column('Φv', sa.Float(), nullable=True),
    sa.Column('stirrup_required', sa.String(length=50), nullable=True),
    sa.Column('Vs', sa.Float(), nullable=True),
    sa.Column('Vsmax', sa.Float(), nullable=True),
    sa.Column('section_check', sa.String(length=50), nullable=True),
    sa.Column('Av', sa.Float(), nullable=True),
    sa.Column('Sreq', sa.Float(), nullable=True),
    sa.Column('S1', sa.Float(), nullable=True),
    sa.Column('n', sa.Float(), nullable=True),
    sa.Column('Avmin1', sa.Float(), nullable=True),
    sa.Column('Avmin2', sa.Float(), nullable=True),
    sa.Column('Avmin', sa.Float(), nullable=True),
    sa.Column('Av_check', sa.String(length=50), nullable=True),
    sa.Column('S2', sa.Float(), nullable=True),
    sa.Column('S3', sa.Float(), nullable=True),
    sa.Column('Scact', sa.Float(), nullable=True),
    sa.Column('Scall1', sa.Float(), nullable=True),
    sa.Column('Scall2', sa.Float(), nullable=True),
    sa.Column('Scall', sa.Float(), nullable=True),
    sa.Column('crack_width_check', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], ),
    sa.PrimaryKeyConstraint('member_id')
    )
    op.create_table('subtraction',
    sa.Column('member_id', sa.Integer(), nullable=False),
    sa.Column('minuend', sa.Integer(), nullable=True),
    sa.Column('subtrahend', sa.Integer(), nullable=True),
    sa.Column('difference', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['member_id'], ['member.id'], ),
    sa.PrimaryKeyConstraint('member_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('subtraction')
    op.drop_table('singly')
    op.drop_table('addition')
    op.drop_index(op.f('ix_member_timestamp'), table_name='member')
    op.drop_index(op.f('ix_member_member_name'), table_name='member')
    op.drop_table('member')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
